@page "/login"
@using System.ComponentModel.DataAnnotations;
@using BlazorApp2.Data;
@using BlazorApp2.Data.Services.Auth;
@inject UserSession UserSession
@inject NavigationManager Navigation
<EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>邮箱</label>
        <InputText @bind-Value="loginModel.Email" class="form-control" />
    </div>

    <div class="form-group">
        <label>密码</label>
        <InputText type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">登录</button>
    <p>还没有账号？</p><a href="/signup"><p>点击注册！</p></a>
</EditForm>

@if (errorMessage != null)
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}




@code {
    private LoginModel loginModel = new();
    private string errorMessage;
    protected override async Task OnInitializedAsync()
    {
        if (await UserSession.IsAuthed())
            Navigation.NavigateTo("/nopower", forceLoad: true);
    }
    private async Task HandleLogin()
    {
        var check = await UserSession.VailEP(loginModel.Email,loginModel.Password);

        if (check == "email")
        {
            errorMessage = "未注册的邮箱";
            return;
        }
        else if (check == "password")
        {
            errorMessage = "密码错误，请重新输入";
            return;
        }
        Navigation.NavigateTo($"/account/login-handler?email={Uri.EscapeDataString(loginModel.Email)}",forceLoad:true);
    }

    public class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        public string Password { get; set; }
    }
}