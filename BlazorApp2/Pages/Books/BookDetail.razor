@page "/books/details/{bookId:guid}"
@using BlazorApp2.Data.Models;
@using BlazorApp2.Data.Services.Auth;
@using BlazorApp2.Data.Services.Books;
@inject UserSession UserSession
@inject BookService BookService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="book-details-page">
    <h3>书籍详情</h3>
    @if (book == null)
    {
        <p class="no-data">未找到指定的书籍</p>
    }
    else
    {
        <div class="book-details-container">
            <div class="book-details-content">
                <img src="@(book.ThumbnailUrl ?? "images/default-book.png")" alt="@book.Title" class="book-image" />
                <div class="book-info">
                    <p class="info-item"><span class="label">标题：</span>@IsNul(book.Title)</p>
                    <p class="info-item"><span class="label">作者：</span>@IsNul(book.Author)</p>
                    <p class="info-item"><span class="label">出版社：</span>@IsNul(book.Publisher)</p>
                    <p class="info-item"><span class="label">出版年份：</span>@(IsNul(book.PublicationYear)?.ToString() ?? "未知")</p>
                    <p class="info-item"><span class="label">ISBN：</span>@IsNul(book.ISBN)</p>
                    <p class="info-item"><span class="label">分类：</span>@IsNul(book.Category)</p>
                    <p class="info-item"><span class="label">描述：</span>@(IsNul(book.Description) ?? "无描述")</p>
                    <p class="info-item"><span class="label">可用副本：</span>@(IsNul(book.AvailableCopies)?.ToString() ?? "0")</p>
                    <p class="info-item"><span class="label">位置：</span>@IsNul(book.Location)</p>
                    <p class="info-item"><span class="label">状态：</span>@(book.Status == "Available" ? "可借阅" : "不可借阅")</p>
                </div>
            </div>
            <div class="button-group">
                <AuthorizeView Roles="User,Librarian,Admin">
                    <button class="action-button" @onclick="NaviToBorrow" disabled="@(!isButton)">借阅</button>
                    <button class="action-button" @onclick="NaviToReserva">预约</button>
                </AuthorizeView>
                <button class="action-button secondary" @onclick="NaviToBack">返回</button>
                <AuthorizeView Roles="Librarian,Admin">
                    <button class="action-button" @onclick="NaviToEdit">编辑</button>
                </AuthorizeView>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public Guid BookId { get; set; }
    private Book book;
    private bool isButton = true;

    protected override async Task OnInitializedAsync()
    {
        book = await BookService.GetBookById(BookId);
        isButton = book?.Status == "Available";
    }

    private T IsNul<T>(T isv)
    {
        return isv ?? default(T);
    }

    private void NaviToReserva()
    {
        Navigation.NavigateTo($"/reservations/create/{BookId}");
    }

    private void NaviToBorrow()
    {
        Navigation.NavigateTo($"/borrows/create/{BookId}");
    }

    private async Task NaviToBack()
    {
        await JSRuntime.InvokeVoidAsync("goBack");
    }

    private void NaviToEdit()
    {
        Navigation.NavigateTo($"/books/edit/{BookId}");
    }
}

<style>
    /* 整体页面样式 */
    .book-details-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f5f5f5; /* 浅灰背景，匹配吉林大学官网 */
        font-family: 'Microsoft YaHei', Arial, sans-serif;
    }

    h3 {
        font-size: 28px;
        color: #333;
        text-align: center; /* 标题居中 */
        margin-bottom: 20px;
    }

    /* 书籍详情容器 */
    .book-details-container {
        background-color: #ffffff; /* 白色背景 */
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        padding: 20px;
    }

    /* 书籍内容（图片+信息） */
    .book-details-content {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .book-image {
        width: 200px;
        height: 280px;
        object-fit: cover; /* 保持图片比例 */
        border-radius: 4px;
        border: 1px solid #e0e0e0;
    }

    .book-info {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 10px;
    }

    .info-item {
        font-size: 16px;
        color: #333;
        margin: 0;
    }

    .label {
        font-weight: bold;
        color: #003087; /* 深蓝色标签 */
        display: inline-block;
        width: 100px; /* 固定标签宽度对齐 */
    }

    /* 按钮组 */
    .button-group {
        display: flex;
        justify-content: center; /* 按钮居中 */
        gap: 10px;
        flex-wrap: wrap;
    }

    .action-button {
        padding: 10px 20px;
        background-color: #003087; /* 深蓝色按钮 */
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        font-family: 'Microsoft YaHei', Arial, sans-serif;
        transition: background-color 0.2s;
    }

        .action-button:hover {
            background-color: #005566; /* 悬停变亮 */
        }

        .action-button:disabled {
            background-color: #6c757d; /* 禁用状态 */
            cursor: not-allowed;
        }

        .action-button.secondary {
            background-color: #6c757d; /* 返回按钮为灰色 */
        }

            .action-button.secondary:hover {
                background-color: #5a6268;
            }

    .no-data {
        font-size: 16px;
        color: #666;
        text-align: center;
        margin: 20px 0;
    }

    /* 响应式设计 */
    @@media (max-width: 768px) {
        h3 {
            font-size: 24px;
        }

        .book-details-content {
            flex-direction: column; /* 移动端图片在上，文字在下 */
            align-items: center;
        }

        .book-image {
            width: 150px;
            height: 210px;
        }

        .book-info {
            gap: 8px;
        }

        .info-item {
            font-size: 14px;
        }

        .label {
            width: 80px;
        }

        .action-button {
            padding: 8px 16px;
            font-size: 12px;
        }
    }
</style>