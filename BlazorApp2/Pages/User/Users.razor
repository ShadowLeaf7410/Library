@page "/users"
@using BlazorApp2.Data.Models
@using BlazorApp2.Data.Services.Auth
@inject UserSession UserSession
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="users-page">
    <h3>用户管理</h3>
    <div class="search-section">
        <div class="search-container">
            <input @bind="searchKeyword"
                   @onkeypress="HandleKeyPress"
                   placeholder="输入用户名，邮箱"
                   class="search-input" />
            <button @onclick="Search" class="search-button">搜索</button>
        </div>
    </div>
    <div class="filter-section">
        <div class="filter-item">
            <label class="filter-label">选择状态:</label>
            <InputSelect @bind-Value="selectsta" class="form-control">
                <option value=@string.Empty>空</option>
                <option value="Active">Active</option>
                <option value="Suspended">Suspended</option>
                <option value="Deleted">Deleted</option>
            </InputSelect>
        </div>
        <AuthorizeView Roles="Admin">
            <Authorized>
                <div class="filter-item">
                    <label class="filter-label">选择等级:</label>
                    <InputSelect @bind-Value="selectrol" class="form-control">
                        <option value=@string.Empty>空</option>
                        <option value="User">User</option>
                        <option value="Librarian">Librarian</option>
                    </InputSelect>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
    <div class="user-grid">
        @if (results != null && results.Any())
        {
            @foreach (var user in results)
            {
                <div class="user-card">
                    <div class="user-info">
                        <p><strong>用户名：</strong>@user.Name</p>
                        <p><strong>邮箱：</strong>@user.Email</p>
                        <p><strong>状态：</strong>@user.Status</p>
                    </div>
                    <AuthorizeView Roles="Admin">
                        <Authorized>
                            <div class="user-actions">
                                <button @onclick="(() => SetLibrarian(user.UserId))" class="action-button">设置管理员</button>
                                <button @onclick="(() => SetUser(user.UserId))" class="action-button">设置用户</button>
                            </div>
                        </Authorized>
                    </AuthorizeView>
                </div>
            }
        }
        else
        {
            <p class="no-results">暂无搜索结果</p>
        }
    </div>
</div>

@code {
    private string searchKeyword = string.Empty;
    private string selectsta = string.Empty;
    private string selectrol = string.Empty;
    private List<User> results;

    protected override async Task OnInitializedAsync()
    {
        var role = await UserSession.getRole();
        if (role == null)
        {
            Navigation.NavigateTo("/login");
            return;
        }
        if (role == "User")
        {
            Navigation.NavigateTo("/nopower");
            return;
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await Search();
        }
    }

    private async Task Search()
    {
        if (selectsta == string.Empty && selectrol == string.Empty)
        {
            results = await UserSession.SearchUsers(keyword: searchKeyword);
        }
        else if (selectsta != string.Empty && selectrol == string.Empty)
        {
            results = await UserSession.SearchUsers(keyword: searchKeyword, status: selectsta);
        }
        else if (selectsta == string.Empty && selectrol != string.Empty)
        {
            results = await UserSession.SearchUsers(keyword: searchKeyword, role: selectrol);
        }
        else
        {
            results = await UserSession.SearchUsers(keyword: searchKeyword, status: selectsta, role: selectrol);
        }
    }

    private async Task SetLibrarian(Guid userId)
    {
        await UserSession.SetLibrarian(userId);
        await JSRuntime.InvokeVoidAsync("alert", "成功设置管理员！");
    }

    private async Task SetUser(Guid userId)
    {
        await UserSession.SetUser(userId);
        await JSRuntime.InvokeVoidAsync("alert", "成功设置用户！");
    }
}

<style>
    /* 整体页面样式 */
    .users-page {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f5f5f5; /* 与 /books、/setting 一致 */
        font-family: 'Microsoft YaHei', Arial, sans-serif;
    }

    /* 标题 */
    h3 {
        font-size: 24px;
        color: #333;
        margin-bottom: 20px;
        text-align: center;
    }

    /* 搜索区域 */
    .search-section {
        margin-bottom: 20px;
    }

    .search-container {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        max-width: 600px;
        margin: 0 auto;
    }

    .search-input {
        flex: 1;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #003087; /* 深蓝色边框 */
        border-radius: 4px;
        background-color: white;
        font-family: 'Microsoft YaHei', Arial, sans-serif;
    }

        .search-input:focus {
            outline: none;
            border-color: #005566; /* 聚焦时边框 */
        }

    .search-button {
        padding: 10px 20px;
        background-color: #003087; /* 深蓝色 */
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        font-family: 'Microsoft YaHei', Arial, sans-serif;
    }

        .search-button:hover {
            background-color: #005566; /* 悬停颜色 */
        }

    /* 过滤区域 */
    .filter-section {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
        max-width: 600px;
        margin: 0 auto;
    }

    .filter-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        max-width: 300px;
    }

    .filter-label {
        font-size: 16px;
        color: #333;
        margin-bottom: 5px;
        text-align: center;
    }

    .form-control {
        padding: 10px;
        font-size: 16px;
        border: 1px solid #003087; /* 深蓝色边框 */
        border-radius: 4px;
        background-color: white;
        color: #333;
        font-family: 'Microsoft YaHei', Arial, sans-serif;
        width: 100%;
        cursor: pointer;
    }

        .form-control:focus {
            outline: none;
            border-color: #005566;
        }

    /* 用户卡片网格 */
    .user-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    /* 用户卡片 */
    .user-card {
        background-color: white;
        border: 1px solid #003087; /* 深蓝色边框 */
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

        .user-card:hover {
            transform: scale(1.03); /* 悬停放大效果 */
        }

    .user-info p {
        font-size: 16px;
        color: #333;
        margin: 5px 0;
    }

        .user-info p strong {
            color: #003087; /* 标签深蓝色 */
        }

    /* 管理员操作按钮 */
    .user-actions {
        display: flex;
        gap: 10px;
        margin-top: 10px;
        justify-content: center;
    }

    .action-button {
        padding: 8px 15px;
        background-color: #003087;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        font-family: 'Microsoft YaHei', Arial, sans-serif;
    }

        .action-button:hover {
            background-color: #005566;
        }

    /* 无结果提示 */
    .no-results {
        font-size: 16px;
        color: #666;
        text-align: center;
        margin: 20px 0;
    }

    /* 响应式设计 */
    @@media (max-width: 768px) {
        .search-container {
            flex-direction: column;
            max-width: 100%;
        }

        .search-input, .search-button {
            width: 100%;
            margin: 5px 0;
        }

        .filter-section {
            max-width: 100%;
        }

        .filter-item {
            max-width: 100%;
        }

        .user-grid {
            grid-template-columns: 1fr; /* 移动端单列 */
        }
    }
</style>